/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void txtStarsQty_change(GTextField source, GEvent event) { //_CODE_:txtStarsQty:938843:
} //_CODE_:txtStarsQty:938843:

public void btnSubmit_click(GButton source, GEvent event) { //_CODE_:btnSubmit:340215:
  int numOfStars = Integer.parseInt(txtStarsQty.getText());
  if(numOfStars >= 0 && numOfStars <= 1000){
    starsQty = numOfStars;
    // Set up new array with new quantity of stars
    listOfStars = new Star[starsQty];
    // Generate stars
    for(int i = 0; i<starsQty; i++){
    listOfStars[i] = new Star();    
    }
  }
  
} //_CODE_:btnSubmit:340215:

public void earthDistFromSun_change(GCustomSlider source, GEvent event) { //_CODE_:earthDistFromSun_slider:222868:
  float dist = source.getValueF();
  earthDistanceToSun = map(dist, 0.0, 1.0, 50.0, 300.0);  // Range from 50 to 300
} //_CODE_:earthDistFromSun_slider:222868:

public void earthRotationSpeed_change(GCustomSlider source, GEvent event) { //_CODE_:earthRotationSpeed_slider:531114:
  float speed = source.getValueF();
  earthRotatingSpeed = map(speed, 0.0, 1.0, 0.005, 0.1);  // Range from 0.005 to 0.1
} //_CODE_:earthRotationSpeed_slider:531114:

public void earthRevolvingSpeed_change(GCustomSlider source, GEvent event) { //_CODE_:earthRevolvingSpeed_slider:866890:
  float speed = source.getValueF();
  earthRevolvingSpeed = map(speed, 0.0, 1.0, 0.01, 0.1);
} //_CODE_:earthRevolvingSpeed_slider:866890:

public void moonDistFromEarth_change(GCustomSlider source, GEvent event) { //_CODE_:moonDistFromEarth_slider:936961:
  float dist = source.getValueF();
  moonDistanceToEarth = map(dist, 0.0, 1.0, 30.0, 70.0);  // Range from 30 to 70
} //_CODE_:moonDistFromEarth_slider:936961:

public void moonRotationSpeed_change(GCustomSlider source, GEvent event) { //_CODE_:moonRotationSpeed_slider:478368:
  float speed = source.getValueF();
  moonRotatingSpeed = map(speed, 0.0, 1.0, 0.005, 0.05);  // Range from 0.005 to 0.05
} //_CODE_:moonRotationSpeed_slider:478368:

public void txtPlanetSpecs_change(GTextField source, GEvent event) { //_CODE_:txtPlanetSpecs:426443:
  
} //_CODE_:txtPlanetSpecs:426443:

public void btnAddPlanet_click(GButton source, GEvent event) { //_CODE_:btnAddPlanet:585671:
  createPlanet(txtPlanetSpecs.getText());
  planetsQty = listOfPlanets.size();
} //_CODE_:btnAddPlanet:585671:

public void btnRemovePlanet_click(GButton source, GEvent event) { //_CODE_:btnRemovePlanet:962829:
  if(planetsQty > 0){
    listOfPlanets.remove(planetsQty-1);  // Remove the last element in the list
    planetsQty = listOfPlanets.size();
  }
} //_CODE_:btnRemovePlanet:962829:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  
  txtStarsQty = new GTextField(this, 20, 790, 219, 20, G4P.SCROLLBARS_NONE);
  txtStarsQty.setText(String.valueOf(starsQty));
  txtStarsQty.setOpaque(true);
  txtStarsQty.addEventHandler(this, "txtStarsQty_change");
  
  btnSubmit = new GButton(this, 260, 790, 80, 20);
  btnSubmit.setText("Submit");
  btnSubmit.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  btnSubmit.addEventHandler(this, "btnSubmit_click");
  
  SolarView = new GView(this, 0, 0, 750, 760, JAVA2D);
  
  float curEarthDistFromSun = map(earthDistanceToSun, 50.0, 300.0, 0.0, 1.0);
  earthDistFromSun_slider = new GCustomSlider(this, 410, 780, 320, 30, "grey_blue");
  earthDistFromSun_slider.setLimits(curEarthDistFromSun, 0.0, 1.0);
  earthDistFromSun_slider.setNumberFormat(G4P.DECIMAL, 2);
  earthDistFromSun_slider.setOpaque(false);
  earthDistFromSun_slider.addEventHandler(this, "earthDistFromSun_change");
  
  float curEarthRotSpeed = map(earthRotatingSpeed, 0.005, 0.1, 0.0, 1.0);
  earthRotationSpeed_slider = new GCustomSlider(this, 20, 830, 320, 30, "grey_blue");
  earthRotationSpeed_slider.setLimits(curEarthRotSpeed, 0.0, 1.0);
  earthRotationSpeed_slider.setNumberFormat(G4P.DECIMAL, 2);
  earthRotationSpeed_slider.setOpaque(false);
  earthRotationSpeed_slider.addEventHandler(this, "earthRotationSpeed_change");
  
  float curEarthRevSpeed = map(earthRevolvingSpeed, 0.01, 0.1, 0.0, 1.0);
  earthRevolvingSpeed_slider = new GCustomSlider(this, 410, 830, 320, 30, "grey_blue");
  earthRevolvingSpeed_slider.setLimits(curEarthRevSpeed, 0.0, 1.0);
  earthRevolvingSpeed_slider.setNumberFormat(G4P.DECIMAL, 2);
  earthRevolvingSpeed_slider.setOpaque(false);
  earthRevolvingSpeed_slider.addEventHandler(this, "earthRevolvingSpeed_change");
  
  float curMoonDistFromEarth = map(moonDistanceToEarth, 30.0, 70.0, 0.0, 1.0);
  moonDistFromEarth_slider = new GCustomSlider(this, 20, 880, 320, 30, "grey_blue");
  moonDistFromEarth_slider.setLimits(curMoonDistFromEarth, 0.0, 1.0);
  moonDistFromEarth_slider.setNumberFormat(G4P.DECIMAL, 2);
  moonDistFromEarth_slider.setOpaque(false);
  moonDistFromEarth_slider.addEventHandler(this, "moonDistFromEarth_change");
  
  float curMoonRotSpeed = map(moonRotatingSpeed, 0.005, 0.05, 0.0, 1.0);
  moonRotationSpeed_slider = new GCustomSlider(this, 410, 880, 320, 30, "grey_blue");
  moonRotationSpeed_slider.setLimits(curMoonRotSpeed, 0.0, 1.0);
  moonRotationSpeed_slider.setNumberFormat(G4P.DECIMAL, 2);
  moonRotationSpeed_slider.setOpaque(false);
  moonRotationSpeed_slider.addEventHandler(this, "moonRotationSpeed_change");
  
  label1 = new GLabel(this, 0, 770, 130, 20);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("Number of stars");
  label1.setOpaque(false);
  
  label2 = new GLabel(this, 390, 770, 180, 20);
  label2.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label2.setText("Earth's Distance From Sun");
  label2.setOpaque(false);
  
  label3 = new GLabel(this, 0, 820, 170, 20);
  label3.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label3.setText("Earth's Rotation Speed");
  label3.setOpaque(false);
  
  label4 = new GLabel(this, 390, 820, 170, 20);
  label4.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label4.setText("Earth's Revolving Speed");
  label4.setOpaque(false);
  
  label5 = new GLabel(this, 0, 870, 190, 20);
  label5.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label5.setText("Moon's Distance From Earth");
  label5.setOpaque(false);
  
  label6 = new GLabel(this, 390, 870, 170, 20);
  label6.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label6.setText("Moon's Rotation Speed");
  label6.setOpaque(false);
  
  txtPlanetSpecs = new GTextField(this, 20, 940, 320, 20, G4P.SCROLLBARS_NONE);
  txtPlanetSpecs.setOpaque(true);
  txtPlanetSpecs.addEventHandler(this, "txtPlanetSpecs_change");
  
  label7 = new GLabel(this, 0, 920, 150, 20);
  label7.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label7.setText("Adding a new planet");
  label7.setOpaque(false);
  
  btnAddPlanet = new GButton(this, 360, 940, 80, 20);
  btnAddPlanet.setText("Add Planet");
  btnAddPlanet.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  btnAddPlanet.addEventHandler(this, "btnAddPlanet_click");
  
  btnRemovePlanet = new GButton(this, 460, 940, 130, 20);
  btnRemovePlanet.setText("Remove Last Planet");
  btnRemovePlanet.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  btnRemovePlanet.addEventHandler(this, "btnRemovePlanet_click");
}

// Variable declarations 
// autogenerated do not edit
GTextField txtStarsQty; 
GButton btnSubmit; 
GView SolarView; 
GCustomSlider earthDistFromSun_slider; 
GCustomSlider earthRotationSpeed_slider; 
GCustomSlider earthRevolvingSpeed_slider; 
GCustomSlider moonDistFromEarth_slider; 
GCustomSlider moonRotationSpeed_slider; 
GLabel label1; 
GLabel label2; 
GLabel label3; 
GLabel label4; 
GLabel label5; 
GLabel label6; 
GTextField txtPlanetSpecs; 
GLabel label7; 
GButton btnAddPlanet; 
GButton btnRemovePlanet; 
